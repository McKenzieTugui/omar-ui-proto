buildscript {
    repositories {
        mavenLocal()
        maven { url ossimMavenProxy }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.8"
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.12'
        classpath 'io.ossim:gradleDefaults:1.8-SNAPSHOT'
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"
}

apply plugin:"application"
apply plugin:"groovy"
apply plugin:"java"
// added
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"asset-pipeline"
apply plugin:"com.moowork.node"

version "0.1"
group "example.micronaut"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url ossimMavenProxy }
//    maven { url "https://jcenter.bintray.com" }
}

// Added
io.ossim.gradleDefaults.Variables.setAdditionalVariables( project )
io.ossim.gradleDefaults.Variables.setVersionVariables( project )
dockerBuildDir="${ rootProject.projectDir }/docker"
version "${ buildVersion }-${ buildVersionTag }"
jarDestination = "${ rootProject.projectDir }/build/${ project.name }-${ version }-all.jar"
io.ossim.gradleDefaults.Docker.addDockerTasks( project, dockerRegistryUrl, dockerRegistryUsername, dockerRegistryPassword, name, dockerImageTag, dockerBuildDir, jarDestination, [ "BASE_IMAGE": "${ dockerRegistryUrl }/${ dockerBaseImage }:${ dockerFromTag }" ])
io.ossim.gradleDefaults.Openshift.addOpenshiftTasks( project, openshiftUrl, openshiftUsername, openshiftPassword, openshiftProjectName, openshiftServiceName, dockerRegistryUrl, name, dockerImageTag )

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.4'
    }
    applyMavenExclusions false
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
}

shadowJar {
    mergeServiceFiles()
//    archiveName = "${ project.name }-${ version }.jar"
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

// This is actually required...
//mainClassName = "example.micronaut.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}